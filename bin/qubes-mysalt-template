#!/bin/sh

name="$1"
encoding="# -*- coding: utf-8 -*-"
vim="# vim: set syntax=yaml ts=2 sw=2 sts=2 et :"

if [ -z "$name" ]; then
  echo "Usage: $0 TEMPLATE_NAME" 2>&1
  exit 128
fi

basedir="/srv/salt/minimal/$name"

info() {
  echo "INFO - $@"
}

topf_info() {
  info "Created top file: $basedir/$1"
}

slsf_info() {
  info "Created top file: $basedir/$1"
}

mkdir -m 755 "$basedir"
cat <<EOF > $basedir/create.top
$encoding
$vim

base:
  dom0:
    - minimal.$name.create
EOF
topf_info create.top

cat <<EOF > $basedir/create.sls
$encoding
$vim

{%- from 'minimal/utils.sls' import clone_then_load_appvms, include_when_required -%}

{%- set config = pillar.get('$name') -%}

{%- set defaults = [] -%}

{{ include_when_required('minimal.replace.with.required.state') }}

{{ clone_then_load_appvms(config, defaults) }}
EOF
slsf_info create.sls

cat <<EOF > $basedir/configure.top
$encoding
$vim

base:
  '*-$name': # replace with matching clause
    - minimal.$name.configure
EOF
slsf_info create.sls

cat <<EOF > $basedir/configure.sls
$encoding
$vim

# Init of configuration.
################################################################################

EOF
slsf_info configure.sls

cat <<EOF >> /srv/pillar/base/minimal/init.sls

$name:
  templatevm: # replace with the template vm
  #clone_config:
  #  name: $name
  #  source:
  appvms:
    - name: minimal-$name
      prefs:
        - mem: 400
        - maxmem: 2048
EOF
info Created pillar file at: /srv/pillar/base/minimal/init.sls

info "Finished!"
